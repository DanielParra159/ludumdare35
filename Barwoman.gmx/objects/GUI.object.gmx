<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.gameTime = 80;
alarm[0] = room_speed *global.gameTime;
global.barClosed =false;
instance_create(870, 20, obj_reloj);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>show_debug_message(string(alarm[]));

global.barClosed = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.barClosed)
{
    if(!instance_exists(obj_Client))
    {           
        room_goto(ScoreRoom);
    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw GUI set alarm
/*
draw_text(0, 0, "Casalla "+ string(global.currentCassalla) );
draw_text(0, 10, "Juan Palomo "+ string(global.currentJuanPalomo) );
draw_text(0, 20, "Pasion Asiatica "+ string(global.currentPasionAsiatica) );
draw_text(0, 30, "Martin Daniels "+ string(global.currentMartinDaniels) );
draw_text(0, 40, "Smirniao "+ string(global.currentSmirniao) );
draw_text(0, 50, "Mardan "+ string(global.currentMardan) );
draw_text(0, 60, "Azucar "+ string(global.currentAzucar) );
draw_text(0, 70, "Naranjas "+ string(global.currentNaranjas) );
draw_text(0, 80, "Sermiesas "+ string(global.currentSermiesa) );
draw_text(0, 90, "Limones "+ string(global.currentLimones) );
*/
displayTime =floor(alarm[0]/room_speed);
if(displayTime &lt; 0)
{
displayTime=0;
}

draw_text(60, 50, string(global.money));
var initialTime = 20; //in Hours
var diff = global.gameTime - displayTime; // Esto son los minutos

var minsToSum = diff % 60;
var hoursToSum = floor((diff / 60));
show_debug_message(hoursToSum);

if (minsToSum &gt; 9)
{
    draw_text(840,20,(string(initialTime+hoursToSum)+":"+string(minsToSum)));
}
else
{
    draw_text(840,20,(string(initialTime+hoursToSum)+":0"+string(minsToSum)));
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
